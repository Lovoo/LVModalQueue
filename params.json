{"name":"LVModalQueue","tagline":"LVModalQueue is an iOS framework, that queues presentation and dismissals of UIViewControllers to avoid crashes.","body":"## Quick start\r\n\r\nLVModalQueue is available on CocoaPods.\r\n\r\nAdd the following to your Podfile:\r\n```ruby\r\npod 'LVModalQueue', :git => 'https://github.com/Lovoo/LVModalQueue'\r\n```\r\nDone! You don't have to import anything or change your existing code!\r\n\r\n## Motivation\r\n\r\nIf a presentation or dismissal is currently in progress, when starting another one, a _NSInternalInconsistencyException_ is thrown because a transition is already in progress.\r\n\r\nHaving a big app with a lot of external frameworks comes with a lot of challenges.\r\n\r\nOne of them is, that most of this frameworks tend to present their UIViewControllers on _[UIApplication sharedApplication].keyWindow.rootViewController_.\r\nHaving truly interactive UIViewController transitions could also lead to multiple concurrent presentations as the user can start a transition, while an old one is still running.\r\n\r\n## Implementation\r\n\r\nLVModalQueue hooks into presentations and dismissals by swizzling into UIViewControllers _presentViewController:animated:completion:_ and _dismissViewControllerAnimated:completion:_ methods. If a transition is currently animating, it is queued for later execution when the transition is finished.\r\n\r\n## Supported iOS Versions\r\n\r\nLVModalQueue was tested on iOS 7 and above in the [Lovoo App](http://lovoo.com) with millions of users and reduced our crashes with concurrent transitions to zero.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}